#include <stdio.h>
#include <string.h>
#include <ctype.h>

void encryptText(const char *plaintext, const char *key, char *ciphertext) {
    int keyLen = strlen(key);
    for (int i = 0, j = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char base = islower(plaintext[i]) ? 'a' : 'A';
            ciphertext[i] = (plaintext[i] - base + tolower(key[j % keyLen]) - 'a') % 26 + base;
            j++;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}

void decryptText(const char *ciphertext, const char *key, char *plaintext) {
    int keyLen = strlen(key);
    for (int i = 0, j = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char base = islower(ciphertext[i]) ? 'a' : 'A';
            plaintext[i] = (ciphertext[i] - base - (tolower(key[j % keyLen]) - 'a') + 26) % 26 + base;
            j++;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}

int main() {
    char plaintext[100], key[100], ciphertext[100], decrypted[100];

    printf("Enter the plaintext: ");
    scanf("%[^\n]%*c", plaintext); 
    printf("Enter the key: ");
    scanf("%s", key);

    encryptText(plaintext, key, ciphertext);
    printf("Encrypted Text: %s\n", ciphertext);

    decryptText(ciphertext, key, decrypted);
    printf("Decrypted Text: %s\n", decrypted);

    return 0;
}
