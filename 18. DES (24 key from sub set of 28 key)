#include <stdio.h>
#include <stdint.h>
void leftShift(uint32_t* halfKey, int shiftAmount) {
    *halfKey = ((*halfKey << shiftAmount) | (*halfKey >> (28 - shiftAmount))) & 0x0FFFFFFF;
}
void generateSubkeys(uint64_t key, uint64_t subkeys[16]) {
    uint32_t C = (key >> 28) & 0x0FFFFFFF;  
    uint32_t D = key & 0x0FFFFFFF;         
    uint32_t C_part, D_part;
    
    int shiftSchedule[16] = {1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2}; 

    for (int round = 0; round < 16; round++) {
        
        leftShift(&C, shiftSchedule[round]);
        leftShift(&D, shiftSchedule[round]);

        
        C_part = (C >> 4) & 0xFFFFFF;  
        D_part = (D >> 4) & 0xFFFFFF;  

        
        subkeys[round] = ((uint64_t)C_part << 24) | D_part;
    }
}


void printBinary(uint64_t val) {
    for (int i = 63; i >= 0; i--) {
        printf("%d", (int)((val >> i) & 1));
        if (i % 8 == 0) printf(" ");
    }
    printf("\n");
}

int main() {
    uint64_t key = 0x133457799BBCDFF1;  
    uint64_t subkeys[16];  

    
    generateSubkeys(key, subkeys);

    
    printf("Generated Subkeys:\n");
    for (int i = 0; i < 16; i++) {
        printf("Subkey %d: ", i + 1);
        printBinary(subkeys[i]);
    }

    return 0;
}
