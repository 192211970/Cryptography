#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void prepareKeyMatrix(char key[], char matrix[SIZE][SIZE]) {
    int used[26] = {0}, row = 0, col = 0;

    // Replace 'j' with 'i' and construct the matrix
    for (int i = 0; key[i] != '\0'; i++) {
        char ch = tolower(key[i]);
        if (ch == 'j') ch = 'i';
        if (!used[ch - 'a']) {
            matrix[row][col++] = ch;
            used[ch - 'a'] = 1;
            if (col == SIZE) col = 0, row++;
        }
    }

    // Add remaining letters
    for (char ch = 'a'; ch <= 'z'; ch++) {
        if (ch == 'j') continue;
        if (!used[ch - 'a']) {
            matrix[row][col++] = ch;
            if (col == SIZE) col = 0, row++;
        }
    }
}

void findPosition(char matrix[SIZE][SIZE], char ch, int *row, int *col) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encryptText(char plaintext[], char matrix[SIZE][SIZE], char ciphertext[]) {
    int len = strlen(plaintext), k = 0;

    for (int i = 0; i < len; i += 2) {
        char a = plaintext[i];
        char b = (i + 1 < len && plaintext[i + 1] != a) ? plaintext[i + 1] : 'x';

        int r1, c1, r2, c2;
        findPosition(matrix, a, &r1, &c1);
        findPosition(matrix, b, &r2, &c2);

        if (r1 == r2) {
            ciphertext[k++] = matrix[r1][(c1 + 1) % SIZE];
            ciphertext[k++] = matrix[r2][(c2 + 1) % SIZE];
        } else if (c1 == c2) {
            ciphertext[k++] = matrix[(r1 + 1) % SIZE][c1];
            ciphertext[k++] = matrix[(r2 + 1) % SIZE][c2];
        } else {
            ciphertext[k++] = matrix[r1][c2];
            ciphertext[k++] = matrix[r2][c1];
        }
    }
    ciphertext[k] = '\0';
}

int main() {
    char key[100], plaintext[100], ciphertext[100];
    char matrix[SIZE][SIZE];

    printf("Enter the keyword: ");
    scanf("%s", key);
    printf("Enter the plaintext: ");
    scanf("%s", plaintext);

    for (int i = 0; plaintext[i]; i++) plaintext[i] = tolower(plaintext[i]);
    for (int i = 0; key[i]; i++) key[i] = tolower(key[i]);

    prepareKeyMatrix(key, matrix);
    encryptText(plaintext, matrix, ciphertext);

    printf("Encrypted Text: %s\n", ciphertext);
    return 0;
}
